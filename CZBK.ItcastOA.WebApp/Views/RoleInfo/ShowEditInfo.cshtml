@model CZBK.ItcastOA.Model.ActionInfo

@{
    ViewBag.Title = "ShowEditInfo";
}
<!DOCTYPE html>
<html>
<head>
<style>
    html,body {
        margin:0px; padding:0px; height:100%; width:100%;
        background-color:lightblue;
    }

</style>
</head>
<body>
    <h2>ShowEditInfo</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>ActionInfo</legend>

            @Html.HiddenFor(model => model.ID)

            <div class="editor-label">
                @Html.LabelFor(model => model.SubTime)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.SubTime)
                @Html.ValidationMessageFor(model => model.SubTime)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.DelFlag)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DelFlag)
                @Html.ValidationMessageFor(model => model.DelFlag)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ModifiedOn)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ModifiedOn)
                @Html.ValidationMessageFor(model => model.ModifiedOn)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Remark)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Remark)
                @Html.ValidationMessageFor(model => model.Remark)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Url)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Url)
                @Html.ValidationMessageFor(model => model.Url)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.HttpMethod)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.HttpMethod)
                @Html.ValidationMessageFor(model => model.HttpMethod)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ActionMethodName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ActionMethodName)
                @Html.ValidationMessageFor(model => model.ActionMethodName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ControllerName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ControllerName)
                @Html.ValidationMessageFor(model => model.ControllerName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ActionInfoName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ActionInfoName)
                @Html.ValidationMessageFor(model => model.ActionInfoName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Sort)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Sort)
                @Html.ValidationMessageFor(model => model.Sort)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ActionTypeEnum)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ActionTypeEnum)
                @Html.ValidationMessageFor(model => model.ActionTypeEnum)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.MenuIcon)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MenuIcon)
                @Html.ValidationMessageFor(model => model.MenuIcon)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.IconWidth)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IconWidth)
                @Html.ValidationMessageFor(model => model.IconWidth)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.IconHeight)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IconHeight)
                @Html.ValidationMessageFor(model => model.IconHeight)
            </div>

            <p>
                <input type="submit" value="Save" />
            </p>
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
</html>


